// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum EnglishProficiency {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  FLUENT
  NATIVE
}

enum EnglishSkillConfidence {
  READING
  WRITING
  SPEAKING
  LISTENING
}

enum EducationBackground {
  HIGH_SCHOOL
  TECHNICAL_SCHOOL
  YEAR_1_UNIVERSITY
  YEAR_2_UNIVERSITY
  YEAR_3_UNIVERSITY
  YEAR_4_UNIVERSITY
  FINAL_YEAR_UNIVERSITY
  BACHELORS
  MASTERS
  PHD
  OTHER
}

enum Occupation {
  EMPLOYED
  ATTENDING_UNIVERSITY_NOT_EMPLOYED
  EMPLOYED_ATTENDING_UNIVERSITY
  ATTENDING_ADVANCED_TRAINING_AND_UNIVERSITY
  NOT_EMPLOYED_NOT_IN_SCHOOL_NOT_IN_ANY_TRAINING
  INTERNSHIP
}

enum DisabilityType {
  PHYSICAL_IMPAIRMENT
  VISUAL_IMPAIRMENT
  HEARING_IMPAIRMENT
  MENTAL_IMPAIRMENT
  SHORT_STATURE
  ALBINISM
  DEAF_BLIND
  AUTISM
  MULTIPLE_DISABILITIES
}

enum ApplicationStatus {
  UNDER_REVIEW
  TECHNICAL_INTERVIEW_SCHEDULED
  TECHNICAL_INTERVIEWED
  COMMON_INTERVIEW_SCHEDULED
  COMMON_INTERVIEWED
  ACCEPTED
  REJECTED
  WAITLISTED
  WITHDRAWN
  NEEDS_FOLLOW_UP
}

model Course {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  applications Application[]
  Email        Email[]
}

model Application {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName      String
  email         String   @unique
  dateOfBirth   DateTime
  gender        Gender
  phone         String
  nationality   String
  refugeeStatus Boolean
  refugeeId     String?
  nationalId    String? // Added national ID field

  hasDisability     Boolean
  disabilityType    DisabilityType?
  disabilityDetails String?

  province String
  district String
  sector   String
  cell     String
  village  String

  emergencyContactName     String
  emergencyContactRelation String
  emergencyContactPhone    String

  hasYoungChild       Boolean
  hasChildcareSupport Boolean?

  hasLaptop         Boolean
  currentOccupation Occupation

  educationBackground    EducationBackground
  university             String?
  academicBackground     String
  englishProficiency     EnglishProficiency
  englishSkillConfidence EnglishSkillConfidence? // New field for English skill confidence
  canPayRegistrationFee  Boolean? // New field for registration fee payment ability

  linkedInProfile String?
  githubProfile   String?

  howDidYouKnow              String
  howDidYouKnowSpecification String? // Added specification field
  motivation                 String
  additionalFeedback         String?

  status                  ApplicationStatus @default(UNDER_REVIEW)
  reviewerComments        String?
  interviewDate           DateTime?
  decisionDate            DateTime?
  technicalInterviewMarks Float?

  courseId String @db.ObjectId
  course   Course @relation(fields: [courseId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Email {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  subject        String
  body           String
  courseId       String    @db.ObjectId
  course         Course    @relation(fields: [courseId], references: [id])
  invitationDate DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}
